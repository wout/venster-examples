{
  "721": {
    "3333acb55ed79731ea6658abb74f453cbb87e15aee01a7aab484b2a6": {
      "p5js_01_renderer": {
        "name": "p5.js 01 Renderer Example",
        "description": [
          "This asset illustrates a p5.js render token which is invoked wit",
          "h two arguments. It also uses venster's internal JSON endpoint t",
          "o periodically fetch information from the blockchain. The size o",
          "f the latest block is used to add 1, 3 or 5 new boids to the sce",
          "ne. The current progress of the epoch is used to position the ne",
          "w boids from left to right. Most of the p5.js code is borrowed f",
          "rom The Nature of Code by Daniel Shiffman (https://natureofcode.",
          "com). "
        ],
        "image": "ipfs://QmehVgB8SUpgdeWHEECR6YSCS4aZ9MUehxb7VW5erKfPDC",
        "mediaType": "image/png",
        "files": [
          {
            "name": "p5js_01_renderer.js",
            "mediaType": "application/javascript",
            "src": [
              "const R=tx_rand(ARGV[1]);let flock;function setup(){createCanvas",
              "(windowWidth,windowHeight);background(255);flock=new Flock();for",
              "(let i=0;i<ARGV[0];i+=1){let b=new Boid(width/2,height/2,'#999')",
              ";flock.addBoid(b)}}function draw(){background('rgba(255,255,255,",
              "0.05)');flock.run()}function windowResized(){resizeCanvas(window",
              "Width,windowHeight)}function addBoid(block){let x=block.slot/432",
              "000*windowWidth;let n=block.block_size<10000?1:block.block_size<",
              "50000?3:5;colorMode(HSB);for(let i=n-1;i>=0;i-=1){flock.addBoid(",
              "new Boid(x,windowHeight/2,color(360*R(),40,90)))}colorMode(RGB)}",
              "setInterval(()=>{window.parent.postMessage('@current_block','*')",
              "},10000);window.addEventListener('message',(event)=>{if(event.da",
              "ta.current_block){addBoid(event.data.current_block)}});function ",
              "Flock(){this.boids=[];};Flock.prototype.run=function(){for(let i",
              "=0;i<this.boids.length;i+=1){this.boids[i].run(this.boids);}};Fl",
              "ock.prototype.addBoid=function(b){this.boids.push(b)};function B",
              "oid(x,y,color){this.acceleration=createVector(0,0);this.velocity",
              "=createVector(random(-1,1),random(-1,1));this.position=createVec",
              "tor(x,y);this.r=10.0;this.maxspeed=3;this.maxforce=0.05;this.col",
              "or=color};Boid.prototype.run=function(boids){this.flock(boids);t",
              "his.update();this.borders();this.render()};Boid.prototype.applyF",
              "orce=function(force){this.acceleration.add(force)};Boid.prototyp",
              "e.flock=function(boids){let sep=this.separate(boids);let ali=thi",
              "s.align(boids);let coh=this.cohesion(boids);sep.mult(1.5);ali.mu",
              "lt(1.0);coh.mult(1.0);this.applyForce(sep);this.applyForce(ali);",
              "this.applyForce(coh)};Boid.prototype.update=function(){this.velo",
              "city.add(this.acceleration);this.velocity.limit(this.maxspeed);t",
              "his.position.add(this.velocity);this.acceleration.mult(0)};Boid.",
              "prototype.seek=function(target){let desired=p5.Vector.sub(target",
              ",this.position);desired.normalize();desired.mult(this.maxspeed);",
              "let steer=p5.Vector.sub(desired,this.velocity);steer.limit(this.",
              "maxforce);return steer};Boid.prototype.render=function(){let the",
              "ta=this.velocity.heading()+radians(90);fill(this.color);noStroke",
              "();push();translate(this.position.x,this.position.y);rotate(thet",
              "a);beginShape();vertex(0,-this.r*2);vertex(-this.r,this.r*2);ver",
              "tex(this.r,this.r*2);endShape(CLOSE);pop()};Boid.prototype.borde",
              "rs=function(){if(this.position.x< -this.r){this.position.x=width",
              "+this.r}if(this.position.y< -this.r){this.position.y=height+this",
              ".r}if(this.position.x>width+this.r){this.position.x= -this.r}if(",
              "this.position.y>height+this.r){this.position.y= -this.r}};Boid.p",
              "rototype.separate=function(boids){let desiredseparation=25.0;let",
              " steer=createVector(0,0);let count=0;for(let i=0;i<boids.length;",
              "i+=1){let d=p5.Vector.dist(this.position,boids[i].position);if((",
              "d>0)&&(d<desiredseparation)){let diff=p5.Vector.sub(this.positio",
              "n,boids[i].position);diff.normalize();diff.div(d);steer.add(diff",
              ");count+=1;}}if(count>0){steer.div(count)}if(steer.mag()>0){stee",
              "r.normalize();steer.mult(this.maxspeed);steer.sub(this.velocity)",
              ";steer.limit(this.maxforce)}return steer};Boid.prototype.align=f",
              "unction(boids){let neighbordist=50;let sum=createVector(0,0);let",
              " count=0;for(let i=0;i<boids.length;i+=1){let d=p5.Vector.dist(t",
              "his.position,boids[i].position);if((d>0)&&(d<neighbordist)){sum.",
              "add(boids[i].velocity);count+=1}}if(count>0){sum.div(count);sum.",
              "normalize();sum.mult(this.maxspeed);let steer=p5.Vector.sub(sum,",
              "this.velocity);steer.limit(this.maxforce);return steer}else{retu",
              "rn createVector(0,0)}};Boid.prototype.cohesion=function(boids){l",
              "et neighbordist=50;let sum=createVector(0,0);let count=0;for(let",
              " i=0;i<boids.length;i+=1){let d=p5.Vector.dist(this.position,boi",
              "ds[i].position);if((d>0)&&(d<neighbordist)){sum.add(boids[i].pos",
              "ition);count+=1}}if(count>0){sum.div(count);return this.seek(sum",
              ");}else{return createVector(0,0)}};"
            ],
            "license": "CC BY-NC-SA 4.0"
          }
        ],
        "outputType": "text/html",
        "dependencies": [
          {
            "type": "external",
            "name": "p5",
            "version": "1.5",
            "source": "ipfs://QmZSfU4GudpKLyPRBGucBeiwLynaVnM3PBLHZDnFhhLePg"
          }
        ]
      },
      "p5js_01_scene": {
        "name": "p5.js 01 Scene Example",
        "description": [
          "This asset illustrates a scene token invoking the renderer token",
          " with two arguments: a literal numeric value and the transaction",
          " hash of the mint. The numeric value defines the number of grey ",
          "boids that should be created initially. The renderer uses the tr",
          "ansaction hash as a seed for the PRNG."
        ],
        "image": "ipfs://QmemRCVLrjGYuQvh8GyBVr1RuPwY9BrPQy4XuxoKtQqAaD",
        "mediaType": "image/png",
        "renderer": {
          "main": "p5js_01_renderer",
          "arguments": [
            5,
            "@tx_hash"
          ]
        }
      }
    }
  }
}